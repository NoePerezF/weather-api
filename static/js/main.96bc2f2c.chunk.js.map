{"version":3,"sources":["Components/Card.tsx","Components/Search.tsx","App.tsx","index.tsx"],"names":["Card","showInfo","info","src","current","condition","icon","alt","location","country","name","temp_c","cloud","text","Search","setInfo","setactualLocation","refSearch","useRef","document","createElement","searchInfo","e","a","preventDefault","query","value","url","fetch","method","mode","cache","response","json","ok","onSubmit","id","type","placeholder","ref","App","useState","lat","setinfo","actualLocation","useEffect","getInfo","Object","keys","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"sNAyCeA,EArBF,SAAC,GAAkB,IAEtBC,EAFqB,EAAhBC,KAKX,OAGI,iCACE,qBAAKC,IAAKF,EAASG,QAAQC,UAAUC,KAAMC,IAAI,KAC/C,oCACA,uCAAUN,EAASO,SAASC,WAC5B,yCAAYR,EAASO,SAASE,QAC9B,8CAAiBT,EAASG,QAAQO,OAAlC,WACA,0CAAaV,EAASG,QAAQQ,MAA9B,OACA,4BAAIX,EAASG,QAAQC,UAAUQ,cCgB1BC,EA/BA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,QAAQC,EAA6B,EAA7BA,kBAEfC,EAAYC,iBAAyBC,SAASC,cAAc,UAC5DC,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfD,EAAEE,iBACc,oFACVC,EAAQR,EAAUb,QAAQsB,MAC1BC,EAFU,oFAEMF,EAAQ,WAJf,SAKQG,MAAMD,EAAI,CAAEE,OAAQ,MAC3CC,KAAM,OACNC,MAAO,YAPQ,cAKTC,EALS,gBASIA,EAASC,OATb,OASTA,EATS,OAUfD,EAASE,GAITnB,EAAQkB,GACRlB,EAAQ,IAGRE,EAAUb,QAAQsB,MAAQ,GAC1BV,GAAkB,GAnBH,4CAAH,sDAqBhB,OACI,uBAAMmB,SAAUd,EAAYe,GAAG,SAA/B,UACI,uBAAOC,KAAK,OAAOC,YAAY,SAASC,IAAOtB,IAAa,gDCSzDuB,MAnCf,WACE,IACA,EAAwBC,mBADN,CAACjC,SAAS,CAACE,KAAK,GAAGD,QAAQ,MAAMiC,IAAI,GAAGtC,QAAQ,CAACQ,MAAM,EAAEP,UAAU,CAACQ,KAAK,GAAGP,KAAK,IAAIK,OAAO,KAC1D,IAApD,mBAAOT,EAAP,KAAayC,EAAb,KACA,EAA4CF,oBAAkB,GAA9D,mBAAOG,EAAP,KAAuB5B,EAAvB,KAqBA,OApBA6B,qBAAU,YACK,uCAAG,8BAAAtB,EAAA,sEACYK,MAAM,mGAAoG,CAAEC,OAAQ,MAC3IC,KAAM,OACNC,MAAO,YAHI,cACLC,EADK,gBAKaA,EAASC,OALtB,cAKLA,EALK,gBAQLU,EAAQV,GARH,2CAAH,qDAafa,KAKA,IAEE,qCACA,cAAC,EAAD,CAAQ/B,QAAW4B,EAAS3B,kBAAmBA,IACjB,IAA7B+B,OAAOC,KAAK9C,GAAM+C,OAAe,8DAAwCL,EAAgB,yCAAG,kDAAyB,cAAC,EAAD,CAAM1C,KAAMA,OAClI,cAAC,EAAD,CAAMA,KAAMA,Q,MC3ChBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,W","file":"static/js/main.96bc2f2c.chunk.js","sourcesContent":["\r\ninterface Info{\r\n    location:{\r\n        name:string\r\n        country:string\r\n        lat:number\r\n    }\r\n    current:{\r\n        cloud:number\r\n        condition:{\r\n            text:string\r\n            icon:string\r\n        }\r\n        temp_c:number\r\n    }\r\n    \r\n}\r\ninterface Props{\r\n    info:Info  | {}\r\n}\r\nconst Card = ({info}:Props) => {\r\n    \r\n    const showInfo = info as  Info\r\n    \r\n   \r\n    return (\r\n        \r\n        \r\n        <main>\r\n          <img src={showInfo.current.condition.icon} alt=\"\" />\r\n          <section>\r\n          <p>Pais: {showInfo.location.country}</p>\r\n          <p>Ciudad: {showInfo.location.name}</p>\r\n          <p>Temperatura: {showInfo.current.temp_c}Â°C</p>\r\n          <p>Nublado: {showInfo.current.cloud}%</p>\r\n          <p>{showInfo.current.condition.text}</p>\r\n          </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import {useRef} from 'react'\r\ninterface Info{\r\n    location:{\r\n      name:string\r\n      country:string\r\n      lat:number\r\n  }\r\n  current:{\r\n      cloud:number\r\n      condition:{\r\n          text:string\r\n          icon:string\r\n      }\r\n      temp_c:number\r\n  } | {}\r\n  }\r\ninterface Props{\r\n    setInfo:(info:Info | {} ) => void\r\n    setactualLocation:(value:boolean) => void\r\n}\r\nconst Search = ({setInfo,setactualLocation}:Props) => {\r\n\r\n    const refSearch = useRef<HTMLInputElement>(document.createElement(\"input\"))\r\n    const searchInfo = async (e:React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault()\r\n        const baseUrl = 'https://api.weatherapi.com/v1/current.json?key=0bf5ab4102624edf8c3213106210109&q='\r\n        const query = refSearch.current.value\r\n        const url = baseUrl + query + '&lang=es'\r\n        const response = await fetch(url,{ method: 'GET',\r\n        mode: 'cors', // <---\r\n        cache: 'default'\r\n     })\r\n        const json = await response.json()\r\n        response.ok ? \r\n        \r\n        //const json = await response.json()\r\n       \r\n        setInfo(json) :\r\n        setInfo({})\r\n        //console.log(json);\r\n        \r\n        refSearch.current.value = \"\"\r\n        setactualLocation(false)\r\n    }\r\n    return (\r\n        <form onSubmit={searchInfo} id=\"search\">\r\n            <input type=\"text\" placeholder=\"London\" ref = {refSearch} /><button>Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","\nimport Card from './Components/Card';\nimport Search from './Components/Search';\nimport { useState,useEffect } from 'react'\ninterface Info{\n  location:{\n    name:string\n    country:string\n    lat:number\n}\ncurrent:{\n    cloud:number\n    condition:{\n        text:string\n        icon:string\n    }\n    temp_c:number\n} | {}\n}\n\nfunction App() {\n  const init:Info = {location:{name:\"\",country:'ini',lat:0},current:{cloud:0,condition:{text:\"\",icon:\"\"},temp_c:0}}\n  const [info, setinfo] = useState<Info | {}>(init || {})\n  const [actualLocation, setactualLocation] = useState<boolean>(true)\n  useEffect(() => {\n    const getInfo = async() =>{\n         const response = await fetch('https://api.weatherapi.com/v1/current.json?key=0bf5ab4102624edf8c3213106210109&q=auto:ip&lang=es', { method: 'GET',\n         mode: 'cors', // <---\n         cache: 'default'\n      })\n         const json:Info = await response.json()\n         \n         \n         await setinfo(json)\n         \n         \n         \n    }\n  getInfo()\n   \n    \n    \n    \n},[])\n  return (\n    <>\n    <Search setInfo = {setinfo} setactualLocation={setactualLocation}></Search>\n    {Object.keys(info).length === 0 ? <h1>No se encontraron resultados</h1> : actualLocation ?<> <h1>Ubicacion actual</h1><Card info={info}></Card></>:\n    <Card info={info}></Card>}\n    \n    \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./scss/main.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
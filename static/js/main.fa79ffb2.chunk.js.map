{"version":3,"sources":["Components/Card.tsx","Components/Search.tsx","App.tsx","index.tsx"],"names":["Card","info","src","current","condition","icon","alt","location","country","name","temp_c","cloud","text","Search","setInfo","refSearch","useRef","document","createElement","searchInfo","e","a","preventDefault","query","value","url","fetch","method","mode","cache","response","json","onSubmit","id","type","placeholder","ref","App","useState","lat","setinfo","useEffect","console","log","getInfo","ReactDOM","render","StrictMode","getElementById"],"mappings":"sNA0CeA,EAtBF,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAMX,OAGI,iCACE,qBAAKC,IAAKD,EAAKE,QAAQC,UAAUC,KAAMC,IAAI,KAC3C,oCACA,uCAAUL,EAAKM,SAASC,WACxB,yCAAYP,EAAKM,SAASE,QAC1B,8CAAiBR,EAAKE,QAAQO,OAA9B,WACA,0CAAaT,EAAKE,QAAQQ,MAA1B,OACA,4BAAIV,EAAKE,QAAQC,UAAUQ,cCMtBC,EAvBA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAEPC,EAAYC,iBAAyBC,SAASC,cAAc,UAC5DC,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfD,EAAEE,iBACc,oFACVC,EAAQR,EAAUZ,QAAQqB,MAC1BC,EAFU,oFAEMF,EAAQ,WAJf,SAKQG,MAAMD,EAAI,CAAEE,OAAQ,MAC3CC,KAAM,OACNC,MAAO,YAPQ,cAKTC,EALS,gBASIA,EAASC,OATb,OASTA,EATS,OAUfjB,EAAQiB,GACRhB,EAAUZ,QAAQqB,MAAQ,GAXX,4CAAH,sDAahB,OACI,uBAAMQ,SAAUb,EAAYc,GAAG,SAA/B,UACI,uBAAOC,KAAK,OAAOC,YAAY,SAASC,IAAOrB,IAAa,gDCczDsB,MA/Bf,WACE,IACA,EAAwBC,mBADN,CAAC/B,SAAS,CAACE,KAAK,GAAGD,QAAQ,MAAM+B,IAAI,GAAGpC,QAAQ,CAACQ,MAAM,EAAEP,UAAU,CAACQ,KAAK,GAAGP,KAAK,IAAIK,OAAO,KAC9G,mBAAOT,EAAP,KAAauC,EAAb,KAqBA,OApBAC,qBAAU,YACK,uCAAG,8BAAApB,EAAA,sEACYK,MAAM,mGAAoG,CAAEC,OAAQ,MAC3IC,KAAM,OACNC,MAAO,YAHI,cACLC,EADK,gBAKaA,EAASC,OALtB,cAKLA,EALK,OAMXW,QAAQC,IAAIZ,GAND,SAQLS,EAAQT,GARH,OASXW,QAAQC,IAAI1C,GATD,4CAAH,qDAaf2C,KAKA,IAEE,qCACA,cAAC,EAAD,CAAQ9B,QAAW0B,IACnB,cAAC,EAAD,CAAMvC,KAAMA,Q,MCzChB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,W","file":"static/js/main.fa79ffb2.chunk.js","sourcesContent":["\r\ninterface Info{\r\n    location:{\r\n        name:string\r\n        country:string\r\n        lat:number\r\n    }\r\n    current:{\r\n        cloud:number\r\n        condition:{\r\n            text:string\r\n            icon:string\r\n        }\r\n        temp_c:number\r\n    }\r\n    \r\n}\r\ninterface Props{\r\n    info:Info\r\n}\r\nconst Card = ({info}:Props) => {\r\n    \r\n   \r\n \r\n    \r\n    \r\n    return (\r\n        \r\n        \r\n        <main>\r\n          <img src={info.current.condition.icon} alt=\"\" />\r\n          <section>\r\n          <p>Pais: {info.location.country}</p>\r\n          <p>Ciudad: {info.location.name}</p>\r\n          <p>Temperatura: {info.current.temp_c}Â°C</p>\r\n          <p>Nublado: {info.current.cloud}%</p>\r\n          <p>{info.current.condition.text}</p>\r\n          </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import {useRef} from 'react'\r\ninterface Info{\r\n    location:{\r\n      name:string\r\n      country:string\r\n      lat:number\r\n  }\r\n  current:{\r\n      cloud:number\r\n      condition:{\r\n          text:string\r\n          icon:string\r\n      }\r\n      temp_c:number\r\n  }\r\n  }\r\ninterface Props{\r\n    setInfo:(info:Info) => void\r\n}\r\nconst Search = ({setInfo}:Props) => {\r\n\r\n    const refSearch = useRef<HTMLInputElement>(document.createElement(\"input\"))\r\n    const searchInfo = async (e:React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault()\r\n        const baseUrl = 'https://api.weatherapi.com/v1/current.json?key=0bf5ab4102624edf8c3213106210109&q='\r\n        const query = refSearch.current.value\r\n        const url = baseUrl + query + '&lang=es'\r\n        const response = await fetch(url,{ method: 'GET',\r\n        mode: 'cors', // <---\r\n        cache: 'default'\r\n     })\r\n        const json = await response.json()\r\n        setInfo(json)\r\n        refSearch.current.value = \"\"\r\n    }\r\n    return (\r\n        <form onSubmit={searchInfo} id=\"search\">\r\n            <input type=\"text\" placeholder=\"London\" ref = {refSearch} /><button>Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","\nimport Card from './Components/Card';\nimport Search from './Components/Search';\nimport { useState,useEffect } from 'react'\ninterface Info{\n  location:{\n    name:string\n    country:string\n    lat:number\n}\ncurrent:{\n    cloud:number\n    condition:{\n        text:string\n        icon:string\n    }\n    temp_c:number\n}\n}\n\nfunction App() {\n  const init:Info = {location:{name:\"\",country:'ini',lat:0},current:{cloud:0,condition:{text:\"\",icon:\"\"},temp_c:0}}\n  const [info, setinfo] = useState<Info>(init)\n  useEffect(() => {\n    const getInfo = async() =>{\n         const response = await fetch('https://api.weatherapi.com/v1/current.json?key=0bf5ab4102624edf8c3213106210109&q=auto:ip&lang=es', { method: 'GET',\n         mode: 'cors', // <---\n         cache: 'default'\n      })\n         const json:Info = await response.json()\n         console.log(json);\n         \n         await setinfo(json)\n         console.log(info);\n         \n         \n    }\n  getInfo()\n   \n    \n    \n    \n},[])\n  return (\n    <>\n    <Search setInfo = {setinfo}></Search>\n    <Card info={info}></Card>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./scss/main.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}